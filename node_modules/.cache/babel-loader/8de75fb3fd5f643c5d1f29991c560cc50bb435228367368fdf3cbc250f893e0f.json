{"ast":null,"code":"var _jsxFileName = \"/Users/ameerabdelnasser/YOUniversity/src/components/GPTQueryComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GPTQueryComponent = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const runGPTQuery = async query => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-3.5-turbo',\n        messages: [{\n          role: 'user',\n          content: query\n        }]\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer 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` //'go buy it yourself dumbass'//`Bearer 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`, // Use environment variable or secure storage\n        }\n      });\n      const result = data.choices[0];\n      if (result.finish_reason !== 'stop') {\n        return {\n          success: false,\n          finish_reason: result.finish_reason\n        };\n      }\n      return {\n        success: true,\n        message: result.message.content\n      };\n    } catch (error) {\n      console.error('Failed to fetch GPT response', error);\n      return {\n        success: false,\n        finish_reason: 'network_error'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const gptResult = await runGPTQuery(query);\n    if (gptResult.success === true) {\n      setResponse(`GPT response: ${gptResult.message}`);\n    } else {\n      setResponse(`Failed with finish_reason: ${gptResult.finish_reason}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gpt-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Enter your query for GPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      style: {\n        color: 'black'\n      },\n      children: response && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n_s(GPTQueryComponent, \"LhbfY902KmGFtchQIJajocNr05Q=\");\n_c = GPTQueryComponent;\nexport default GPTQueryComponent;\nvar _c;\n$RefreshReg$(_c, \"GPTQueryComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GPTQueryComponent","_s","query","setQuery","response","setResponse","loading","setLoading","runGPTQuery","data","post","model","messages","role","content","headers","Authorization","result","choices","finish_reason","success","message","error","console","handleSubmit","e","preventDefault","gptResult","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","disabled","style","color","_c","$RefreshReg$"],"sources":["/Users/ameerabdelnasser/YOUniversity/src/components/GPTQueryComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\ninterface FailedGptResponse {\n  success: false;\n  finish_reason: string;\n}\n\ninterface SuccessfulGptResponse {\n  success: true;\n  message: string;\n}\n\ntype GptResponse = FailedGptResponse | SuccessfulGptResponse;\n\nconst GPTQueryComponent: React.FC = () => {\n  const [query, setQuery] = useState<string>('');\n  const [response, setResponse] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const runGPTQuery = async (query: string): Promise<GptResponse> => {\n    setLoading(true);\n    try {\n      const { data } = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: 'gpt-3.5-turbo',\n          messages: [{ role: 'user', content: query }],\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer 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`, //'go buy it yourself dumbass'//`Bearer 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`, // Use environment variable or secure storage\n          },\n        }\n      );\n\n      const result = data.choices[0];\n\n      if (result.finish_reason !== 'stop') {\n        return {\n          success: false,\n          finish_reason: result.finish_reason,\n        };\n      }\n\n      return {\n        success: true,\n        message: result.message.content,\n      };\n    } catch (error) {\n      console.error('Failed to fetch GPT response', error);\n      return {\n        success: false,\n        finish_reason: 'network_error',\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const gptResult = await runGPTQuery(query);\n    if (gptResult.success === true) {\n      setResponse(`GPT response: ${gptResult.message}`);\n    } else {\n      setResponse(`Failed with finish_reason: ${gptResult.finish_reason}`);\n    }\n  };\n\n  return (\n      <div className='gpt-box'>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Enter your query for GPT\"\n        />\n        <button type=\"submit\" disabled={loading}>\n          Submit\n        </button>\n      </form>\n      <div className=\"\"style={{ color: 'black'}}>\n              {response && <p >{response}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default GPTQueryComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc1B,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAEtD,MAAMY,WAAW,GAAG,MAAON,KAAa,IAA2B;IACjEK,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM;QAAEE;MAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC/B,4CAA4C,EAC5C;QACEC,KAAK,EAAE,eAAe;QACtBC,QAAQ,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAEZ;QAAM,CAAC;MAC7C,CAAC,EACD;QACEa,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,4DAA2D,CAAE;QAC/E;MACF,CACF,CAAC;MAED,MAAMC,MAAM,GAAGR,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC;MAE9B,IAAID,MAAM,CAACE,aAAa,KAAK,MAAM,EAAE;QACnC,OAAO;UACLC,OAAO,EAAE,KAAK;UACdD,aAAa,EAAEF,MAAM,CAACE;QACxB,CAAC;MACH;MAEA,OAAO;QACLC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAEJ,MAAM,CAACI,OAAO,CAACP;MAC1B,CAAC;IACH,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAO;QACLF,OAAO,EAAE,KAAK;QACdD,aAAa,EAAE;MACjB,CAAC;IACH,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiB,YAAY,GAAG,MAAOC,CAAmC,IAAK;IAClEA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,SAAS,GAAG,MAAMnB,WAAW,CAACN,KAAK,CAAC;IAC1C,IAAIyB,SAAS,CAACP,OAAO,KAAK,IAAI,EAAE;MAC9Bf,WAAW,CAAE,iBAAgBsB,SAAS,CAACN,OAAQ,EAAC,CAAC;IACnD,CAAC,MAAM;MACLhB,WAAW,CAAE,8BAA6BsB,SAAS,CAACR,aAAc,EAAC,CAAC;IACtE;EACF,CAAC;EAED,oBACIpB,OAAA;IAAK6B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACxB9B,OAAA;MAAM+B,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBAC3B9B,OAAA;QACEgC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE9B,KAAM;QACb+B,QAAQ,EAAGR,CAAC,IAAKtB,QAAQ,CAACsB,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACFxC,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAACS,QAAQ,EAAElC,OAAQ;QAAAuB,QAAA,EAAC;MAEzC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACPxC,OAAA;MAAK6B,SAAS,EAAC,EAAE;MAAAa,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAb,QAAA,EACjCzB,QAAQ,iBAAIL,OAAA;QAAA8B,QAAA,EAAKzB;MAAQ;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CA1EID,iBAA2B;AAAA2C,EAAA,GAA3B3C,iBAA2B;AA4EjC,eAAeA,iBAAiB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}